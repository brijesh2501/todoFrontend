[{"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/index.tsx":"1","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/App.tsx":"2","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/reducer.ts":"3","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/actionCreators.ts":"4","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/components/AddTodo.tsx":"5","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/components/Todo.tsx":"6","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/actionTypes.ts":"7"},{"size":480,"mtime":1672559396373,"results":"8","hashOfConfig":"9"},{"size":1235,"mtime":1672641700963,"results":"10","hashOfConfig":"9"},{"size":987,"mtime":1672641662999,"results":"11","hashOfConfig":"9"},{"size":641,"mtime":1672639524717,"results":"12","hashOfConfig":"9"},{"size":1161,"mtime":1672640963019,"results":"13","hashOfConfig":"9"},{"size":740,"mtime":1672640973269,"results":"14","hashOfConfig":"9"},{"size":110,"mtime":1672585290008,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"124tl7t",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/index.tsx",[],[],[],"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/App.tsx",["39"],[],"import React, { useEffect } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\nimport \"./styles.css\"\nimport { getTodos } from \"./store/actionCreators\";\n\nimport { Todo } from \"./components/Todo\"\nimport { AddTodo } from \"./components/AddTodo\"\nimport { addTodo, removeTodo } from \"./store/actionCreators\"\nimport { Dispatch } from \"redux\"\nimport axios from 'axios'\nimport env from \"react-dotenv\";\n\nconst App: React.FC = () => {\n  const todos: readonly ITodo[] = useSelector(\n    (state: TodoState) => state.todos,\n    shallowEqual\n  )\n  useEffect(():any => {\n    let mounted = true;\n    axios.get(`${env.API_URL}/todos`)\n      .then(res => {\n        if(mounted && res.data){\n        dispatch(getTodos(res.data))\n        }\n    });\n    return () => (mounted = false);\n  }, [todos]);\n\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const saveTodo = React.useCallback(\n    (todo: ITodo) => dispatch(addTodo(todo)),\n    [dispatch]\n  )\n\n  return (\n    <main>\n      <h1>My todos</h1>\n      <AddTodo saveTodo={saveTodo} />\n      {todos.map((todo: ITodo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          removeTodo={removeTodo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App","/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/reducer.ts",[],[],"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/actionCreators.ts",[],[],"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/components/AddTodo.tsx",[],[],"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/components/Todo.tsx",[],[],"/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/actionTypes.ts",[],[],{"ruleId":"40","severity":1,"message":"41","line":27,"column":6,"nodeType":"42","endLine":27,"endColumn":13,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [dispatch, todos]",{"range":"47","text":"48"},[799,806],"[dispatch, todos]"]