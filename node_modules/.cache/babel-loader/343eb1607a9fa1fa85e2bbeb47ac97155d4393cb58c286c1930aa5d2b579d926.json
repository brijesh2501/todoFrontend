{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from 'axios';\nlet initialState = {\n  todos: []\n};\n\n// initialState[\"todos\"] =  [\n//     {\n//       id: 1,\n//       title: \"post 1\",\n//       description:\n//         \"Quisque cursus, metus vitae pharetra Nam libero tempore, cum soluta nobis est eligendi\",\n//         dueDate: new Date(),\n//         priority: 1\n//     },\n//     {\n//       id: 2,\n//       title: \"post 2\",\n//       description:\n//         \"Harum quidem rerum facilis est et expedita distinctio quas molestias excepturi sint\",\n//         dueDate: new Date(),\n//         priority: 2\n//     },\n//   ];\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.GET_TODO:\n      axios.get(`http://localhost:3001/api/v1/todos`).then(res => {\n        initialState['todos'] = res.data;\n        return {\n          ...state,\n          todos: res.data\n        };\n      });\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: Math.random(),\n        // not really unique\n        title: action.todo.title,\n        description: action.todo.description,\n        dueDate: action.todo.dueDate,\n        priority: action.todo.priority\n      };\n      return {\n        ...state,\n        todos: state.todos.concat(newTodo)\n      };\n    case actionTypes.REMOVE_TODO:\n      const updatedTodos = state.todos.filter(todo => todo.id !== action.todo.id);\n      return {\n        ...state,\n        todos: updatedTodos\n      };\n  }\n  return state;\n};\nexport default reducer;","map":{"version":3,"names":["actionTypes","axios","initialState","todos","reducer","state","action","type","GET_TODO","get","then","res","data","ADD_TODO","newTodo","id","Math","random","title","todo","description","dueDate","priority","concat","REMOVE_TODO","updatedTodos","filter"],"sources":["/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/reducer.ts"],"sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from 'axios'\n\nlet initialState: TodoState = {todos: []};\n\n// initialState[\"todos\"] =  [\n//     {\n//       id: 1,\n//       title: \"post 1\",\n//       description:\n//         \"Quisque cursus, metus vitae pharetra Nam libero tempore, cum soluta nobis est eligendi\",\n//         dueDate: new Date(),\n//         priority: 1\n//     },\n//     {\n//       id: 2,\n//       title: \"post 2\",\n//       description:\n//         \"Harum quidem rerum facilis est et expedita distinctio quas molestias excepturi sint\",\n//         dueDate: new Date(),\n//         priority: 2\n//     },\n//   ];\n\nconst reducer = (\n    state: TodoState = initialState,\n    action: TodoAction\n  ): TodoState => {\n    switch (action.type) {\n      case actionTypes.GET_TODO:\n        axios.get(`http://localhost:3001/api/v1/todos`)\n        .then(res => {\n          initialState['todos'] = res.data;\n          return {\n            ...state,\n            todos: res.data,\n          }\n          \n        });\n        \n      case actionTypes.ADD_TODO:\n        const newTodo: ITodo = {\n          id: Math.random(), // not really unique\n          title: action.todo.title,\n          description: action.todo.description,\n          dueDate: action.todo.dueDate,\n          priority: action.todo.priority\n        }\n        return {\n          ...state,\n          todos: state.todos.concat(newTodo),\n        }\n      case actionTypes.REMOVE_TODO:\n        const updatedTodos: ITodo[] = state.todos.filter(\n          todo => todo.id !== action.todo.id\n        )\n        return {\n          ...state,\n          todos: updatedTodos,\n        }\n    }\n    return state\n  }\n  \n  export default reducer"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,eAAe;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAIC,YAAuB,GAAG;EAACC,KAAK,EAAE;AAAE,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,YAGE;EAAA,IAFdC,KAAgB,uEAAGH,YAAY;EAAA,IAC/BI,MAAkB;EAElB,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,WAAW,CAACQ,QAAQ;MACvBP,KAAK,CAACQ,GAAG,CAAE,oCAAmC,CAAC,CAC9CC,IAAI,CAACC,GAAG,IAAI;QACXT,YAAY,CAAC,OAAO,CAAC,GAAGS,GAAG,CAACC,IAAI;QAChC,OAAO;UACL,GAAGP,KAAK;UACRF,KAAK,EAAEQ,GAAG,CAACC;QACb,CAAC;MAEH,CAAC,CAAC;IAEJ,KAAKZ,WAAW,CAACa,QAAQ;MACvB,MAAMC,OAAc,GAAG;QACrBC,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE;QAAE;QACnBC,KAAK,EAAEZ,MAAM,CAACa,IAAI,CAACD,KAAK;QACxBE,WAAW,EAAEd,MAAM,CAACa,IAAI,CAACC,WAAW;QACpCC,OAAO,EAAEf,MAAM,CAACa,IAAI,CAACE,OAAO;QAC5BC,QAAQ,EAAEhB,MAAM,CAACa,IAAI,CAACG;MACxB,CAAC;MACD,OAAO;QACL,GAAGjB,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACoB,MAAM,CAACT,OAAO;MACnC,CAAC;IACH,KAAKd,WAAW,CAACwB,WAAW;MAC1B,MAAMC,YAAqB,GAAGpB,KAAK,CAACF,KAAK,CAACuB,MAAM,CAC9CP,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKT,MAAM,CAACa,IAAI,CAACJ,EAAE,CACnC;MACD,OAAO;QACL,GAAGV,KAAK;QACRF,KAAK,EAAEsB;MACT,CAAC;EAAA;EAEL,OAAOpB,KAAK;AACd,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}