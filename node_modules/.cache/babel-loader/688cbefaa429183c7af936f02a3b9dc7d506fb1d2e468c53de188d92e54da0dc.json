{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from 'axios';\nlet initialState = {\n  todos: []\n};\nconst data = async function () {\n  return await axios.get(`http://localhost:3001/api/v1/todos`).then(res => {\n    // return res.data;\n    return res.data;\n    // return res.data;\n  });\n};\n\ndata().then(todo => {\n  console.log(\"test\", todo);\n  initialState['todos'] = todo;\n});\nconsole.log(\"data2\", initialState);\n\n// initialState[\"todos\"] =  [\n//     {\n//       id: 1,\n//       title: \"post 1\",\n//       description:\n//         \"Quisque cursus, metus vitae pharetra Nam libero tempore, cum soluta nobis est eligendi\",\n//         dueDate: new Date(),\n//         priority: 1\n//     },\n//     {\n//       id: 2,\n//       title: \"post 2\",\n//       description:\n//         \"Harum quidem rerum facilis est et expedita distinctio quas molestias excepturi sint\",\n//         dueDate: new Date(),\n//         priority: 2\n//     },\n//   ];\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: Math.random(),\n        // not really unique\n        title: action.todo.title,\n        description: action.todo.description,\n        dueDate: action.todo.dueDate,\n        priority: action.todo.priority\n      };\n      return {\n        ...state,\n        todos: state.todos.concat(newTodo)\n      };\n    case actionTypes.REMOVE_TODO:\n      const updatedTodos = state.todos.filter(todo => todo.id !== action.todo.id);\n      return {\n        ...state,\n        todos: updatedTodos\n      };\n  }\n  return state;\n};\nexport default reducer;","map":{"version":3,"names":["actionTypes","axios","initialState","todos","data","get","then","res","todo","console","log","reducer","state","action","type","ADD_TODO","newTodo","id","Math","random","title","description","dueDate","priority","concat","REMOVE_TODO","updatedTodos","filter"],"sources":["/Users/brijeshrawat/Documents/projects/todoApp/todo-app-frontend/src/store/reducer.ts"],"sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from 'axios'\n\nlet initialState: TodoState = {todos: []};\n\nconst data = async function(){ \nreturn await axios.get(`http://localhost:3001/api/v1/todos`)\n  .then(res => {\n    // return res.data;\n   return res.data;\n    // return res.data;\n    \n  });\n}\n\n  data().then((todo)=>{\n    console.log(\"test\",todo);\n    initialState['todos'] = todo;\n  });\n\n\n\n\n\nconsole.log(\"data2\",initialState);\n\n// initialState[\"todos\"] =  [\n//     {\n//       id: 1,\n//       title: \"post 1\",\n//       description:\n//         \"Quisque cursus, metus vitae pharetra Nam libero tempore, cum soluta nobis est eligendi\",\n//         dueDate: new Date(),\n//         priority: 1\n//     },\n//     {\n//       id: 2,\n//       title: \"post 2\",\n//       description:\n//         \"Harum quidem rerum facilis est et expedita distinctio quas molestias excepturi sint\",\n//         dueDate: new Date(),\n//         priority: 2\n//     },\n//   ];\n\nconst reducer = (\n    state: TodoState = initialState,\n    action: TodoAction\n  ): TodoState => {\n    switch (action.type) {\n      case actionTypes.ADD_TODO:\n        const newTodo: ITodo = {\n          id: Math.random(), // not really unique\n          title: action.todo.title,\n          description: action.todo.description,\n          dueDate: action.todo.dueDate,\n          priority: action.todo.priority\n        }\n        return {\n          ...state,\n          todos: state.todos.concat(newTodo),\n        }\n      case actionTypes.REMOVE_TODO:\n        const updatedTodos: ITodo[] = state.todos.filter(\n          todo => todo.id !== action.todo.id\n        )\n        return {\n          ...state,\n          todos: updatedTodos,\n        }\n    }\n    return state\n  }\n  \n  export default reducer"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,eAAe;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAIC,YAAuB,GAAG;EAACC,KAAK,EAAE;AAAE,CAAC;AAEzC,MAAMC,IAAI,GAAG,kBAAgB;EAC7B,OAAO,MAAMH,KAAK,CAACI,GAAG,CAAE,oCAAmC,CAAC,CACzDC,IAAI,CAACC,GAAG,IAAI;IACX;IACD,OAAOA,GAAG,CAACH,IAAI;IACd;EAEF,CAAC,CAAC;AACJ,CAAC;;AAECA,IAAI,EAAE,CAACE,IAAI,CAAEE,IAAI,IAAG;EAClBC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,IAAI,CAAC;EACxBN,YAAY,CAAC,OAAO,CAAC,GAAGM,IAAI;AAC9B,CAAC,CAAC;AAMJC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACR,YAAY,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMS,OAAO,GAAG,YAGE;EAAA,IAFdC,KAAgB,uEAAGV,YAAY;EAAA,IAC/BW,MAAkB;EAElB,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,WAAW,CAACe,QAAQ;MACvB,MAAMC,OAAc,GAAG;QACrBC,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE;QAAE;QACnBC,KAAK,EAAEP,MAAM,CAACL,IAAI,CAACY,KAAK;QACxBC,WAAW,EAAER,MAAM,CAACL,IAAI,CAACa,WAAW;QACpCC,OAAO,EAAET,MAAM,CAACL,IAAI,CAACc,OAAO;QAC5BC,QAAQ,EAAEV,MAAM,CAACL,IAAI,CAACe;MACxB,CAAC;MACD,OAAO;QACL,GAAGX,KAAK;QACRT,KAAK,EAAES,KAAK,CAACT,KAAK,CAACqB,MAAM,CAACR,OAAO;MACnC,CAAC;IACH,KAAKhB,WAAW,CAACyB,WAAW;MAC1B,MAAMC,YAAqB,GAAGd,KAAK,CAACT,KAAK,CAACwB,MAAM,CAC9CnB,IAAI,IAAIA,IAAI,CAACS,EAAE,KAAKJ,MAAM,CAACL,IAAI,CAACS,EAAE,CACnC;MACD,OAAO;QACL,GAAGL,KAAK;QACRT,KAAK,EAAEuB;MACT,CAAC;EAAA;EAEL,OAAOd,KAAK;AACd,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}